{"version":3,"sources":["theme.js","components/Slider/styles.js","components/Skeleton/index.jsx","components/ImageCard/index.jsx","components/RestaurantCard/styles.js","components/Rating/styles.js","components/Rating/index.jsx","components/RestaurantCard/index.jsx","components/Modal/Portal/index.jsx","components/Modal/styles.js","components/Modal/index.jsx","redux/modules/restaurants.js","components/Map/index.jsx","components/Loader/index.jsx","components/Slider/Index.jsx","pages/Home/styles.js","pages/Home/index.jsx","redux/reducers/index.js","redux/store.js","App.js","serviceWorker.js","index.js","assets/restaurante-fake.png","assets/logo.svg"],"names":["Theme","colors","primary","background","text","sucess","fonts","regular","Carousel","styled","Slider","keyFrameLoading","keyframes","LoadingSkeleton","div","props","width","heigth","Card","photo","Title","span","theme","ImageCard","title","useState","imageLoaded","setImageLoaded","useEffect","imageLoader","Image","src","onload","Skeleton","Restaurant","RestaurantInfo","Address","RestaurantPhoto","img","RattingStyled","Rating","rating","count","size","isHalf","value","edit","emptyIcon","className","halfIcon","fullIcon","activeColor","RestaurantCard","restaurant","onClick","name","vicinity","formatted_address","photos","getUrl","icon","alt","onLoad","PortalModel","children","portal","document","getElementById","ReactDOM","createPortal","Overlay","Dialog","Modal","open","onClose","onEsc","e","keyCode","window","addEventListener","removeEventListener","Portal","stopPropagation","Types","initialState","restaurants","restaurantSelected","setRestaurants","type","payload","setRestaurant","GoogleApiWrapper","apiKey","process","languege","dispatch","useDispatch","useSelector","state","google","query","placeId","map","setMap","onMapReady","_","console","log","center","service","maps","places","PlacesService","request","location","radius","nearbySearch","results","status","PlacesServiceStatus","OK","searchNearby","textSearch","searchByQuery","fields","getDetails","place","getRestaurantById","centerAroundCurrentLocation","onReady","onRecenter","zoom","key","place_id","position","lat","geometry","lng","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","options","SliderSeach","settings","dots","infinite","speed","slidesToShow","slidesToScroll","adaptiveHeight","restaurante","Wrapper","Container","aside","Seach","section","Logo","Map","CarouselTitle","h1","ModalTitle","p","ModalContent","Home","inputValue","setValue","setQuery","modalOpened","setModalOpen","SetPlaceId","logo","label","outlined","trailingIcon","role","onChange","target","length","Loader","handleOpenModal","formatted_phone_number","opening_hours","open_now","combineReducers","action","store","createStore","rootReducer","App","Boolean","hostname","match","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.75677d86.chunk.js","sourcesContent":["const Theme = {\r\n  colors: {\r\n    primary: '#6200ee',\r\n    background: '#00000014',\r\n    text: '#000000b30',\r\n    sucess: '#135E01'\r\n  }, fonts:{\r\n    regular: `'Roboto', sans-serif;`,\r\n  }\r\n};\r\nexport default Theme","import styled  from \"styled-components\";\nimport Slider from \"react-slick\";\n\n\nexport const Carousel = styled(Slider)`\n.slick-slide{\n  margin-right: 10px;\n}\n`;\n","import React from \"react\";\nimport styled, {keyframes}  from \"styled-components\";\n\nconst keyFrameLoading = keyframes`\n  0%{\n       opacity: 0.5\n  }\n  100%{\n    opacity: 1;\n  }\n`;\n\nconst LoadingSkeleton = styled.div `\n  background-color: gray;\n  border-radius: 6px;\n  margin-bottom: 10px;\n  min-width: ${(props) => props.width};\n  height:  ${(props) => props.heigth};\n  animation: ${keyFrameLoading} 500ms infinite alternate;\n`;\n\nexport default({ width, heigth }) => <LoadingSkeleton  width={width} heigth={heigth}/>\n","import React, {useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\nimport Skeleton  from \"../Skeleton/index\";\n\n\nconst Card = styled.div`\n width: 5vw;\n  height: 9vh;\n  border-radius: 8px;\n  background-image: url(${(props) => props.photo});\n  background-size: cover;\n\n`;\nconst Title = styled.span `\n  font-family: ${(props) => props.theme.fonts.regular};\n  color: #ffffff;\n  font-size: 16px;\n`;\n\nconst ImageCard =( { photo, title} ) => {\n  const [imageLoaded, setImageLoaded] = useState(false);\n  useEffect (() => {\n          const imageLoader = new Image();\n          imageLoader.src = photo;\n          imageLoader.onload = () => setImageLoaded(true);\n  }, [photo])\n  return(\n    <>\n    {imageLoaded ? (\n      <div>\n         <Card photo={photo}>\n            <Title>{title}</Title>\n         </Card>\n         </div>\n    ) :\n    (\n      <Skeleton  width=\"5vw\" heigth=\"9vh\" />\n    )\n  }\n\n     </>\n  )\n}\nexport default ImageCard;\n","import styled  from \"styled-components\";\n\n\nexport const Restaurant = styled.div`\n  display: flex;\n  justify-content:  space-around;\n  cursor: pointer;\n  margin-top: 5px;\n  padding: 16px;\n  border-left: 5px solid transparent;\n  background-color: #ffffff;\n  :hover{\n    background-color: ${(props) => props.theme.colors.background};\n    border-left-color:   ${(props) => props.theme.colors.primary};\n  }\n`;\nexport const RestaurantInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 200px;\n`;\nexport const Title = styled.span `\n  font-family: ${(props) => props.theme.fonts.regular};\n  color: ${(props) => props.theme.colors.text};\n  font-size: 24px;\n  font-weight: bold;\n  line-height: 29px;\n  margin-bottom: 10px;\n`;\n\nexport const Address = styled.span `\n  font-family: ${(props) => props.theme.fonts.regular};\n  color: ${(props) => props.theme.colors.text};\n  font-size: 12px;\n  line-height: 19px;\n  margin-bottom: 10px;\n\n\n`;\nexport const RestaurantPhoto = styled.img`\ndisplay:  ${(props) => props.imageLoaded  ? 'block' : 'none' };\n  width: 100px;\n  height: 100px;\n  object-fit: cover;\n  border-radius: 5px;\n  background-position: center;\n`;\n","import styled  from \"styled-components\";\r\n\r\n\r\n export const RattingStyled = styled.div`\r\n   margin-bottom: 10px;\r\n `; ","import ReactStars from \"react-rating-stars-component\";\nimport React from \"react\";\nimport  {RattingStyled} from \"./styles\"\n\nconst Rating = ({rating}) => {\n  return (\n    <RattingStyled>\n     <ReactStars\n      count={5}\n      size={24}\n      isHalf\n      value={rating}\n      edit={false}\n      emptyIcon={<i className=\"far fa-star\"></i>}\n      halfIcon={<i className=\"fa fa-star-half-alt\"></i>}\n      fullIcon={<i className=\"fa fa-star\"></i>}\n      activeColor=\"#e7711c\"\n     />\n  </RattingStyled>\n  )\n}\n\nexport default Rating;\n","import React, { useState } from \"react\";\nimport { Restaurant, RestaurantInfo, Title,Address, RestaurantPhoto } from \"./styles\";\nimport Rating from \"../Rating/index\";\nimport Skeleton  from \"../Skeleton/index\";\nimport restaurante from '../../assets/restaurante-fake.png'\nconst RestaurantCard = ({restaurant, onClick}) => {\n\n  const [imageLoaded , setImageLoaded] = useState(false)\n  return (\n     <Restaurant onClick={onClick}>\n         <RestaurantInfo>\n              <Title>\n                    {restaurant.name}\n              </Title>\n              <Rating rating={restaurant.rating}>\n              </Rating>\n              <Address>\n                {restaurant.vicinity || restaurant.formatted_address}\n              </Address>\n         </RestaurantInfo>\n         <RestaurantPhoto\n         imageLoaded ={imageLoaded }\n         src={restaurant.photos ? restaurant.photos[0].getUrl() : restaurant.icon}\n         alt=\"foto do restaurante\"\n          onLoad={() => setImageLoaded(true)}\n          />\n          {!imageLoaded  &&\n            <Skeleton  width=\"100px\" heigth=\"100px\" />\n          }\n     </Restaurant>\n  )\n}\n\nexport default RestaurantCard;\n","import  ReactDOM  from \"react-dom\";\n\nconst PortalModel = ( { children}) => {\n  const portal = document.getElementById('modal-root');\n  return ReactDOM.createPortal(children, portal);\n};\nexport default PortalModel;\n","import styled  from \"styled-components\";\n\n\nexport const  Overlay = styled.div `\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background: rgba(78, 89, 131, 0.5);\n  backdrop-filter: blur(5px);\n  z-index: 999;\n`;\n\nexport const Dialog = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  max-height: calc(100% - 144px);\n  width: 500px;\n  padding: 24px;\n  background-color: #ffffff;\n  box-shadow: 0px 0px 32px rgba(78, 89, 131, 0.2);\n  border-radius: 8x;\n`;\n","import React, {useEffect} from \"react\";\nimport Portal from \"./Portal/index\"\nimport { Overlay , Dialog } from \"./styles\";\nconst Modal = ({children, open, onClose}) => {\n   useEffect(() => {\n\n   function onEsc(e) {\n     if(e.keyCode === 27 ) {\n        onClose();\n     }\n   }\n   window.addEventListener('keydown', onEsc);\n   return () => {\n     window.removeEventListener('keydown',onEsc);\n   }\n   }, [onClose])\n\n  if(!open) return null\n\n  function  onOverlayClick(){\n    onClose();\n  }\n\n  function onDialogClick(e){\n     e.stopPropagation();\n  }\n\n  return(\n    <Portal>\n      <Overlay onClick={onOverlayClick}>\n        <Dialog onClick={onDialogClick}>\n          {children}\n        </Dialog>\n      </Overlay>\n    </Portal>\n  )\n}\nexport default  Modal;\n","export const Types = {\n  SET_RESTAURANTS: 'restaurants/SET_RESTAURANTS',\n  SET_RESTAURANT: 'restaurants/SET_RESTAURANT',\n};\n\nconst initialState = {\n  restaurants: [],\n  restaurantSelected: null\n};\n\nexport default function reducer(state = initialState, action) {\n   switch(action.type){\n        case  Types.SET_RESTAURANTS:\n          return {...state, restaurants: action.payload};\n          case Types.SET_RESTAURANT:\n               return {...state, restaurantSelected: action.payload};\n          default:\n            return state;\n     }\n};\nexport function setRestaurants(restaurants) {\n  return{\n    type:  Types.SET_RESTAURANTS,\n    payload: restaurants,\n  }\n}\n\nexport function setRestaurant(restaurant) {\n  return{\n    type: Types.SET_RESTAURANT,\n    payload: restaurant,\n  }\n};\n\n\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {Map, GoogleApiWrapper, Marker} from 'google-maps-react';\nimport { setRestaurants, setRestaurant } from '../../redux/modules/restaurants';\n\n\n\nexport const MapContainer = (props) =>{\n\n   const dispatch = useDispatch();\n   const  { restaurants} = useSelector((state) => state.restaurants)\n   const {google, query,  placeId} = props;\n   const [map, setMap] = useState(null)\n\n   useEffect (() => {\n     if(query){\n      searchByQuery(query);\n     }\n   }, [query]);\n\n   useEffect (() => {\n     if(placeId){\n       getRestaurantById(placeId)\n     }\n   }, [placeId])\n\n   function getRestaurantById(placeId){\n    const service = new google.maps.places.PlacesService(map)\n    dispatch(setRestaurant(null));\n    const request = {\n     placeId: placeId,\n     fields: ['name', 'opening_hours', 'formatted_address', 'formatted_phone_number'],\n     };\n     service.getDetails(request, (place, status) =>{\n       if(status === google.maps.places.PlacesServiceStatus.OK){\n         dispatch(setRestaurant(place));\n       };\n     } )\n   }\n   function searchByQuery (query) {\n    const service = new google.maps.places.PlacesService(map)\n   dispatch(setRestaurants([]))\n    const request = {\n      location: map.center,\n      radius: '200 ',\n      type: ['restaurant'],\n      query,\n     }\n     service.textSearch(request, (results, status) =>{\n       if(status === google.maps.places.PlacesServiceStatus.OK){\n         dispatch(setRestaurants(results));\n       };\n     } )\n  }\n  function searchNearby(map, center) {\n    const service = new google.maps.places.PlacesService(map)\n    dispatch(setRestaurants([]))\n    const request = {\n      location: center,\n      radius: '2000',\n      type: ['restaurant'],\n    }\n    service.nearbySearch(request, (results, status) =>{\n\n      if( status === google.maps.places.PlacesServiceStatus.OK){\n              dispatch(setRestaurants(results));\n      }\n    });\n\n  }\n\n  function onMapReady(_, map) {\n    setMap(map);\n    console.log(map);\n    searchNearby(map, map.center);\n  }\n  return (\n        <Map google={google}\n                  centerAroundCurrentLocation\n                  onReady={onMapReady}\n                  onRecenter={onMapReady}\n                  zoom={15}\n                  {...props}\n          >\n            {restaurants.map( (restaurant) => (\n                 <Marker\n                  key={restaurant.place_id}\n                  name={restaurant.name}\n                  position ={{\n                    lat:restaurant.geometry.location.lat(),\n                    lng: restaurant.geometry.location.lng()\n                  }}\n                 />\n            ))}\n\n          </Map>\n  )\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n  languege: 'pt-BR',\n})(MapContainer);\n","import React from 'react';\nimport Lottie from 'react-lottie';\nimport animationData from \"../../assets/restaurants-loading.json\"\n\n\nexport default () => {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n\n  return (<Lottie options={defaultOptions} />);\n};\n","import React  from \"react\";\nimport  {Carousel} from \"./styles\";\n\nimport restaurante from '../../assets/restaurante-fake.png'\nimport {Card} from \"../../components/index\"\n\n\nconst SliderSeach = ({restaurants}) =>{\n  console.log(\"slider\",restaurants);\n  const settings = {\n    dots: false,\n    autoplay: true,\n    infinite: true,\n    speed: 300,\n    slidesToShow: 4,\n    slidesToScroll: 4,\n    adaptiveHeight: true,\n  };\n  return(\n    <>\n\n             <Carousel {... settings}>\n               {restaurants.map((restaurant) => <Card key={restaurant.place_id}  photo={restaurant.photos? restaurant.photos[0].getUrl(): restaurante} title={restaurant.name}  />)}\n             </Carousel>\n    </>\n  )\n}\n\n export default  SliderSeach;\n\n\n","import styled  from \"styled-components\";\n export const Wrapper = styled.div `\n   display: flex;\n   flex-direction: row;\n `;\n\nexport  const Container = styled.aside `\n  background-color: ${(props) => props.theme.colors.background};\n  width: 28vw;\n  height: 100vh;\n  overflow-y: auto;\n`;\n\nexport const Seach = styled.section`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nbackground-color: #ffffff;\npadding: 16px;\n`;\nexport const Logo = styled.img`\n   margin-bottom: 15px;\n`;\n\nexport const Map = styled.div`\n  height: 100vh;\n  width: 100vw;\n`;\nexport const CarouselTitle = styled.h1`\n font-family: ${(props) => props.theme.fonts.regular};\n color: ${(props) => props.theme.colors.text};\n //font-family: 'Roboto', sans-serif;\n  font-size: 24px;\n  font-weight: bold;\n  line-height: 29px;\n  margin: 16px 0;\n`;\n\n\nexport const SliderStyled = styled.img`\nmargin: 2px;\n`;\n\nexport const  ModalTitle =  styled.p `\n  margin-bottom: 10px;\n  letter-spacing: 0.11px;\n  font-family: ${(props) => props.theme.fonts.regular};\n  color: ${(props) => props.theme.colors.text};\n  text-transform: none;\n  line-height: 29px;\n  font-size: 24px;\n  font-weight: bold;\n`;\nexport const ModalContent = styled.div`\n margin-bottom: 10px;\n  font-family: ${(props) => props.theme.fonts.regular};\n  color: ${(props) => props.theme.colors.text};\n  line-height: 19px;\n  font-size:  16px;\n  font-weight: normal;\n`;\n","import React, { useState } from \"react\";\nimport {  useSelector } from 'react-redux';\nimport logo from '../../assets/logo.svg'\nimport TextField, {Input} from '@material/react-text-field';\nimport MaterialIcon from '@material/react-material-icon';\nimport  SliderSeach from '../../components/Slider/Index';\nimport { RestaurantCard, Modal, MapContainer, Loader, Skeleton} from '../../components'\n\nimport  {Container, Seach, Logo, Wrapper, CarouselTitle, Map, ModalTitle,ModalContent} from \"./styles\";\n\nconst Home  = () => {\n\n  const  [inputValue, setValue] = useState('');\n  const [query, setQuery] = useState(null);\n  const [modalOpened, setModalOpen] = useState(false);\n  const [placeId, SetPlaceId] = useState(null)\n  const  { restaurants, restaurantSelected} = useSelector((state) => state.restaurants)\n\n\n  function handleOpenModal(placeId){\n    SetPlaceId(placeId);\n    setModalOpen(true);\n  }\n   function changeInput (e){\n    setValue(e.target.value)\n    setQuery(inputValue)\n   }\n\n  return (\n    <Wrapper>\n              <Container>\n                 <Seach>\n                    <Logo src={logo} alt=\"Logo do Restaurante\"/>\n                    <TextField\n                            label='Pesquisar'\n                             outlined\n                            trailingIcon={<MaterialIcon role=\"button\" icon=\"search\"/>}      >\n                    <Input\n                            value={inputValue}\n                            onChange={changeInput} />\n                     </TextField>\n                  {restaurants.length > 0 ? (\n                    <>\n                     <CarouselTitle>\n                      Na sua Área\n                     </CarouselTitle>\n                    <SliderSeach  restaurants={ restaurants} />\n                    </>\n                  ) : (\n\n                    <Loader />\n\n                  )\n                }\n\n                 </Seach>\n                 {  restaurants.map((restaurant) =>(\n                    <RestaurantCard\n                      onClick={() => handleOpenModal(restaurant.place_id)}\n                      restaurant={restaurant} />\n                 ))}\n              </Container>\n              <Map>\n                <MapContainer query ={query} placeId={placeId}>\n                </MapContainer>\n              </Map>\n              <Modal\n                open={modalOpened} onClose={() =>\n                setModalOpen(!modalOpened)}\n              >\n                {restaurantSelected?(\n                  <>\n                         <ModalTitle> {restaurantSelected ?.name}</ModalTitle>\n                         <ModalContent>{restaurantSelected ?.formatted_address}</ModalContent>\n                         <ModalContent>{restaurantSelected ?.formatted_phone_number}</ModalContent>\n                         <ModalContent>{restaurantSelected ?.opening_hours ?.open_now? \"Aberto agora :=)\" : \"Fechado no momento :-(\"}</ModalContent>\n                  </>\n                )\n              :\n              (\n                <>\n                <Skeleton width=\"10px\" heigth=\"10px\" />\n                <Skeleton width=\"10px\" heigth=\"10px\" />\n                <Skeleton width=\"10px\" heigth=\"10px\" />\n                <Skeleton width=\"10px\" heigth=\"10px\" />\n                </>\n              )\n                }\n              </Modal>\n    </Wrapper>\n\n     )\n}\n\n\nexport default Home\n","import { combineReducers  } from \"redux\";\n\nimport  restaurants  from \"../modules/restaurants\";\n\nexport default combineReducers ({\n    restaurants,\n});\n\n","import { createStore } from \"redux\";\n\nimport rootReducer from './reducers/index'\n\nconst store =  createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Theme from './theme';\nimport Home from './pages/Home/index';\nimport { ThemeProvider } from 'styled-components';\nimport {Reset} from 'styled-reset';\nimport store  from './redux/store';\nfunction App() {\n  return (\n              <div>\n                <Provider store={store}>\n                  <ThemeProvider theme={Theme}>\n                        <Reset />\n                        <Home />\n                   </ThemeProvider>\n                </Provider>\n\n              </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '@material/react-text-field/dist/text-field.css';\r\nimport '@material/react-material-icon/dist/material-icon.css';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/restaurante-fake.cd9dc0a0.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.31c4f3a8.svg\";"],"sourceRoot":""}